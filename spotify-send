#!/bin/bash

# spotify-send       
# es@ethanschoonover.com / Ethan Schoonover / @ethanschoonover

# send media key to spotify window even if not visible
# then flash current track via dbus notification

# usage:
#
# spotify-send play | spotify-send pause
# spotify-send prev
# spotify-send next
# spotify-send shuffle
# spotify-send repeat
# spotify-send [volume] up
# spotify-send [volume] down

SPOTIFY_NAME="Spotify Premium - Linux Preview"
NAME_PREFIX="WM_ICON_NAME(COMPOUND_TEXT)"
SEP=" â€“ "

Flash ()   { notify-send -u low -t 1000 "$*"; }
SendKey () { xdotool search --name "$SPOTIFY_NAME" key --window %@ $1; }

ShowTrack () {
    TRACK="$(xprop -name "$SPOTIFY_NAME" \
           | grep "$NAME_PREFIX" \
           | sed 's/.*Spotify - \([^"]*\)".*/\1/' \
           | sed "s/$SEP/ - /")"
    [[ -n "$TRACK" ]] && Flash "$TRACK"
    }

case $@ in
    play|pause) SendKey XF86AudioPlay; ShowTrack ;;
    next)       SendKey XF86AudioNext; ShowTrack ;;
    prev)       SendKey XF86AudioPrev; ShowTrack ;;
    shuffle)    SendKey "ctrl+s"; Flash "Shuffle toggle" ;;
    repeat)     SendKey "ctrl+r"; Flash "Repeat toggle" ;;
    *up)        SendKey "ctrl+Up"; Flash "Spotify volume up" ;;
    *down)      SendKey "ctrl+Down"; Flash "Spotify volume down" ;;
esac


#dbus-send --print-reply --session --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Next
#qdbus org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.freedesktop.DBus.Properties.GetAll org.mpris.MediaPlayer2.Player
# 
# #!/bin/bash
# 
# # Collect DBUS_SESSION_BUS_ADDRESS from running process
# function set_dbus_adress
# {
# 	USER=$1
# 	PROCESS=$2
# 	PID=`pgrep -o -u $USER $PROCESS`
# 	ENVIRON=/proc/$PID/environ
# 
# 	if [ -e $ENVIRON ]
# 	 then
# 	export `grep -z DBUS_SESSION_BUS_ADDRESS $ENVIRON`
# 	 else
# 	echo "Unable to set DBUS_SESSION_BUS_ADDRESS."
# 	exit 1
# 	fi
# }
# 
# function spotify_cmd
# {
# 	dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.$1 1> /dev/null
# }
# 
# function spotify_query
# {
# 	qdbus org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.freedesktop.DBus.Properties.Get org.mpris.MediaPlayer2.Player PlaybackStatus
# }
# 
# function quit_message
# {
# 	echo "Usage: `basename $0` {play|pause|playpause|next|previous|stop|playstatus|<spotify URI>}"
# 	exit 1
# }
# 
# # Count arguments, must be 1
# if [ "$#" -ne "1" ]
# then
#         echo -e "You must supply exactly one argument!\n"
# 	quit_message
# fi
# 
# # Check if DBUS_SESSION is set
# if [ -z $DBUS_SESSION_BUS_ADDRESS ] 
# 	 then
# 	#echo "DBUS_SESSION_BUS_ADDRESS not set. Guessing."
# 	set_dbus_adress `whoami` spotify
# fi
# 
# case "$1" in
#         play)
# 		spotify_cmd Play
#                 ;;
#         pause)
# 		spotify_cmd Pause
#                 ;;
#         playpause)
# 		spotify_cmd PlayPause
#                 ;;
#         next)
# 		spotify_cmd Next
#                 ;;
#         previous)
# 		spotify_cmd Previous
#                 ;;
#         stop)
# 		spotify_cmd Stop
#                 ;;
#         spotify:user:*)
# 		spotify_cmd "OpenUri string:$1"
# 		spotify_cmd Play
#                 ;;
#         spotify:*:*)
# 		spotify_cmd "OpenUri string:$1"
#                 ;;
# 	playstatus)
# 		spotify_query
# 		;;
#         *)
#                 echo -e "Bad argument.\n"
#                 quit_message
#                 ;;
# esac
# 
# exit 0
# 
